class SparseVector:
    def __init__(self, nums: List[int]):
        self.dims = []
        for i in range(len(nums)):
            if nums[i] != 0:
                self.dims.append([i, nums[i]])

    # Return the dotProduct of two sparse vectors
    def dotProduct(self, vec: 'SparseVector') -> int:
        res = 0
        i, j = 0, 0
        print(self.dims, vec.dims)
        while i < len(self.dims) and j < len(vec.dims):
            if self.dims[i][0] == vec.dims[j][0]:
                res += self.dims[i][1] * vec.dims[j][1]
                i += 1
                j += 1
            elif self.dims[i][0] < vec.dims[j][0]:
                i += 1
            else:
                j += 1
        return res

# Your SparseVector object will be instantiated and called as such:
# v1 = SparseVector(nums1)
# v2 = SparseVector(nums2)
# ans = v1.dotProduct(v2)